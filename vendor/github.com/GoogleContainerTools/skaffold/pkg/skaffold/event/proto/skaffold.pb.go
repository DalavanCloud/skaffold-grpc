// Code generated by protoc-gen-go. DO NOT EDIT.
// source: skaffold.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EventType int32

const (
	EventType_buildEvent  EventType = 0
	EventType_deployEvent EventType = 1
	EventType_portEvent   EventType = 2
	EventType_metaEvent   EventType = 3
)

var EventType_name = map[int32]string{
	0: "buildEvent",
	1: "deployEvent",
	2: "portEvent",
	3: "metaEvent",
}

var EventType_value = map[string]int32{
	"buildEvent":  0,
	"deployEvent": 1,
	"portEvent":   2,
	"metaEvent":   3,
}

func (x EventType) String() string {
	return proto.EnumName(EventType_name, int32(x))
}

func (EventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4f2d38e344f9dbf5, []int{0}
}

type StateResponse struct {
	State                *State   `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StateResponse) Reset()         { *m = StateResponse{} }
func (m *StateResponse) String() string { return proto.CompactTextString(m) }
func (*StateResponse) ProtoMessage()    {}
func (*StateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f2d38e344f9dbf5, []int{0}
}

func (m *StateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StateResponse.Unmarshal(m, b)
}
func (m *StateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StateResponse.Marshal(b, m, deterministic)
}
func (m *StateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StateResponse.Merge(m, src)
}
func (m *StateResponse) XXX_Size() int {
	return xxx_messageInfo_StateResponse.Size(m)
}
func (m *StateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StateResponse proto.InternalMessageInfo

func (m *StateResponse) GetState() *State {
	if m != nil {
		return m.State
	}
	return nil
}

type Response struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f2d38e344f9dbf5, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type Request struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f2d38e344f9dbf5, []int{2}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type State struct {
	BuildState           *BuildState  `protobuf:"bytes,1,opt,name=buildState,proto3" json:"buildState,omitempty"`
	DeployState          *DeployState `protobuf:"bytes,2,opt,name=deployState,proto3" json:"deployState,omitempty"`
	ForwardedPorts       []*PortInfo  `protobuf:"bytes,3,rep,name=forwardedPorts,proto3" json:"forwardedPorts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *State) Reset()         { *m = State{} }
func (m *State) String() string { return proto.CompactTextString(m) }
func (*State) ProtoMessage()    {}
func (*State) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f2d38e344f9dbf5, []int{3}
}

func (m *State) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_State.Unmarshal(m, b)
}
func (m *State) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_State.Marshal(b, m, deterministic)
}
func (m *State) XXX_Merge(src proto.Message) {
	xxx_messageInfo_State.Merge(m, src)
}
func (m *State) XXX_Size() int {
	return xxx_messageInfo_State.Size(m)
}
func (m *State) XXX_DiscardUnknown() {
	xxx_messageInfo_State.DiscardUnknown(m)
}

var xxx_messageInfo_State proto.InternalMessageInfo

func (m *State) GetBuildState() *BuildState {
	if m != nil {
		return m.BuildState
	}
	return nil
}

func (m *State) GetDeployState() *DeployState {
	if m != nil {
		return m.DeployState
	}
	return nil
}

func (m *State) GetForwardedPorts() []*PortInfo {
	if m != nil {
		return m.ForwardedPorts
	}
	return nil
}

// BuildState contains a map of all skaffold artifacts to their current build
// states
type BuildState struct {
	Artifacts            map[string]string `protobuf:"bytes,1,rep,name=artifacts,proto3" json:"artifacts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *BuildState) Reset()         { *m = BuildState{} }
func (m *BuildState) String() string { return proto.CompactTextString(m) }
func (*BuildState) ProtoMessage()    {}
func (*BuildState) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f2d38e344f9dbf5, []int{4}
}

func (m *BuildState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildState.Unmarshal(m, b)
}
func (m *BuildState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildState.Marshal(b, m, deterministic)
}
func (m *BuildState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildState.Merge(m, src)
}
func (m *BuildState) XXX_Size() int {
	return xxx_messageInfo_BuildState.Size(m)
}
func (m *BuildState) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildState.DiscardUnknown(m)
}

var xxx_messageInfo_BuildState proto.InternalMessageInfo

func (m *BuildState) GetArtifacts() map[string]string {
	if m != nil {
		return m.Artifacts
	}
	return nil
}

// DeployState contains the status of the current deploy
type DeployState struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeployState) Reset()         { *m = DeployState{} }
func (m *DeployState) String() string { return proto.CompactTextString(m) }
func (*DeployState) ProtoMessage()    {}
func (*DeployState) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f2d38e344f9dbf5, []int{5}
}

func (m *DeployState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployState.Unmarshal(m, b)
}
func (m *DeployState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployState.Marshal(b, m, deterministic)
}
func (m *DeployState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployState.Merge(m, src)
}
func (m *DeployState) XXX_Size() int {
	return xxx_messageInfo_DeployState.Size(m)
}
func (m *DeployState) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployState.DiscardUnknown(m)
}

var xxx_messageInfo_DeployState proto.InternalMessageInfo

func (m *DeployState) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type PortInfo struct {
	LocalPort            int32    `protobuf:"varint,1,opt,name=localPort,proto3" json:"localPort,omitempty"`
	RemotePort           int32    `protobuf:"varint,2,opt,name=remotePort,proto3" json:"remotePort,omitempty"`
	PodName              string   `protobuf:"bytes,3,opt,name=podName,proto3" json:"podName,omitempty"`
	ContainerName        string   `protobuf:"bytes,4,opt,name=containerName,proto3" json:"containerName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PortInfo) Reset()         { *m = PortInfo{} }
func (m *PortInfo) String() string { return proto.CompactTextString(m) }
func (*PortInfo) ProtoMessage()    {}
func (*PortInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f2d38e344f9dbf5, []int{6}
}

func (m *PortInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PortInfo.Unmarshal(m, b)
}
func (m *PortInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PortInfo.Marshal(b, m, deterministic)
}
func (m *PortInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PortInfo.Merge(m, src)
}
func (m *PortInfo) XXX_Size() int {
	return xxx_messageInfo_PortInfo.Size(m)
}
func (m *PortInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PortInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PortInfo proto.InternalMessageInfo

func (m *PortInfo) GetLocalPort() int32 {
	if m != nil {
		return m.LocalPort
	}
	return 0
}

func (m *PortInfo) GetRemotePort() int32 {
	if m != nil {
		return m.RemotePort
	}
	return 0
}

func (m *PortInfo) GetPodName() string {
	if m != nil {
		return m.PodName
	}
	return ""
}

func (m *PortInfo) GetContainerName() string {
	if m != nil {
		return m.ContainerName
	}
	return ""
}

type Event struct {
	Artifact             string    `protobuf:"bytes,1,opt,name=artifact,proto3" json:"artifact,omitempty"`
	Status               string    `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Err                  string    `protobuf:"bytes,3,opt,name=err,proto3" json:"err,omitempty"`
	EventType            EventType `protobuf:"varint,4,opt,name=eventType,proto3,enum=proto.EventType" json:"eventType,omitempty"`
	PortInfo             *PortInfo `protobuf:"bytes,5,opt,name=portInfo,proto3" json:"portInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f2d38e344f9dbf5, []int{7}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetArtifact() string {
	if m != nil {
		return m.Artifact
	}
	return ""
}

func (m *Event) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Event) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func (m *Event) GetEventType() EventType {
	if m != nil {
		return m.EventType
	}
	return EventType_buildEvent
}

func (m *Event) GetPortInfo() *PortInfo {
	if m != nil {
		return m.PortInfo
	}
	return nil
}

type LogEntry struct {
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Type                 EventType            `protobuf:"varint,2,opt,name=type,proto3,enum=proto.EventType" json:"type,omitempty"`
	Entry                string               `protobuf:"bytes,3,opt,name=entry,proto3" json:"entry,omitempty"`
	Error                string               `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *LogEntry) Reset()         { *m = LogEntry{} }
func (m *LogEntry) String() string { return proto.CompactTextString(m) }
func (*LogEntry) ProtoMessage()    {}
func (*LogEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f2d38e344f9dbf5, []int{8}
}

func (m *LogEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogEntry.Unmarshal(m, b)
}
func (m *LogEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogEntry.Marshal(b, m, deterministic)
}
func (m *LogEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogEntry.Merge(m, src)
}
func (m *LogEntry) XXX_Size() int {
	return xxx_messageInfo_LogEntry.Size(m)
}
func (m *LogEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_LogEntry.DiscardUnknown(m)
}

var xxx_messageInfo_LogEntry proto.InternalMessageInfo

func (m *LogEntry) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *LogEntry) GetType() EventType {
	if m != nil {
		return m.Type
	}
	return EventType_buildEvent
}

func (m *LogEntry) GetEntry() string {
	if m != nil {
		return m.Entry
	}
	return ""
}

func (m *LogEntry) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterEnum("proto.EventType", EventType_name, EventType_value)
	proto.RegisterType((*StateResponse)(nil), "proto.StateResponse")
	proto.RegisterType((*Response)(nil), "proto.Response")
	proto.RegisterType((*Request)(nil), "proto.Request")
	proto.RegisterType((*State)(nil), "proto.State")
	proto.RegisterType((*BuildState)(nil), "proto.BuildState")
	proto.RegisterMapType((map[string]string)(nil), "proto.BuildState.ArtifactsEntry")
	proto.RegisterType((*DeployState)(nil), "proto.DeployState")
	proto.RegisterType((*PortInfo)(nil), "proto.PortInfo")
	proto.RegisterType((*Event)(nil), "proto.Event")
	proto.RegisterType((*LogEntry)(nil), "proto.LogEntry")
}

func init() { proto.RegisterFile("skaffold.proto", fileDescriptor_4f2d38e344f9dbf5) }

var fileDescriptor_4f2d38e344f9dbf5 = []byte{
	// 609 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x54, 0xeb, 0x6a, 0x13, 0x4f,
	0x14, 0xff, 0x4f, 0xd2, 0x6d, 0xb3, 0x27, 0x6d, 0xda, 0xff, 0x41, 0x24, 0xac, 0x55, 0xcb, 0x52,
	0xa1, 0x28, 0x6c, 0x6b, 0x2a, 0x58, 0x44, 0x04, 0xc5, 0xe0, 0x85, 0x22, 0xb2, 0xe9, 0x0b, 0x4c,
	0xb3, 0x27, 0x21, 0x74, 0x77, 0x67, 0x9d, 0x9d, 0x54, 0xf2, 0x06, 0xe2, 0x03, 0xf8, 0x06, 0x7e,
	0xd0, 0xa7, 0x94, 0xb9, 0xec, 0xa5, 0x0d, 0xfd, 0xb4, 0xfb, 0xbb, 0x9c, 0x39, 0x73, 0xce, 0xcc,
	0x19, 0x18, 0x94, 0x57, 0x7c, 0x36, 0x13, 0x69, 0x12, 0x15, 0x52, 0x28, 0x81, 0x9e, 0xf9, 0x04,
	0x8f, 0xe7, 0x42, 0xcc, 0x53, 0x3a, 0x36, 0xe8, 0x72, 0x39, 0x3b, 0x56, 0x8b, 0x8c, 0x4a, 0xc5,
	0xb3, 0xc2, 0xfa, 0x82, 0x07, 0xb7, 0x0d, 0x94, 0x15, 0x6a, 0x65, 0xc5, 0xf0, 0x14, 0x76, 0x26,
	0x8a, 0x2b, 0x8a, 0xa9, 0x2c, 0x44, 0x5e, 0x12, 0x86, 0xe0, 0x95, 0x9a, 0x18, 0xb2, 0x03, 0x76,
	0xd4, 0x1f, 0x6d, 0x5b, 0x5f, 0x64, 0x4d, 0x56, 0x0a, 0xf7, 0xa1, 0x57, 0xfb, 0xf7, 0xa0, 0x9b,
	0x95, 0x73, 0xe3, 0xf6, 0x63, 0xfd, 0x1b, 0x3e, 0x84, 0xad, 0x98, 0xbe, 0x2d, 0xa9, 0x54, 0x88,
	0xb0, 0x91, 0xf3, 0x8c, 0x9c, 0x6a, 0xfe, 0xc3, 0x3f, 0x0c, 0x3c, 0xb3, 0x1a, 0x3e, 0x07, 0xb8,
	0x5c, 0x2e, 0xd2, 0x64, 0xd2, 0xca, 0xf7, 0xbf, 0xcb, 0xf7, 0xae, 0x16, 0xe2, 0x96, 0x09, 0x5f,
	0x40, 0x3f, 0xa1, 0x22, 0x15, 0x2b, 0x1b, 0xd3, 0x31, 0x31, 0xe8, 0x62, 0xde, 0x37, 0x4a, 0xdc,
	0xb6, 0xe1, 0x4b, 0x18, 0xcc, 0x84, 0xfc, 0xce, 0x65, 0x42, 0xc9, 0x57, 0x21, 0x55, 0x39, 0xec,
	0x1e, 0x74, 0x8f, 0xfa, 0xa3, 0x5d, 0x17, 0xa8, 0xb9, 0x4f, 0xf9, 0x4c, 0xc4, 0xb7, 0x6c, 0xe1,
	0x4f, 0x06, 0xd0, 0xec, 0x04, 0xdf, 0x80, 0xcf, 0xa5, 0x5a, 0xcc, 0xf8, 0x54, 0x95, 0x43, 0x66,
	0x96, 0x38, 0x58, 0xdb, 0x6f, 0xf4, 0xb6, 0xb2, 0x8c, 0x73, 0x25, 0x57, 0x71, 0x13, 0x12, 0xbc,
	0x86, 0xc1, 0x4d, 0x51, 0x77, 0xef, 0x8a, 0x56, 0x55, 0xf7, 0xae, 0x68, 0x85, 0xf7, 0xc0, 0xbb,
	0xe6, 0xe9, 0xd2, 0xd6, 0xe6, 0xc7, 0x16, 0xbc, 0xea, 0x9c, 0xb1, 0xf0, 0x09, 0xf4, 0x5b, 0x15,
	0xe2, 0x7d, 0xd8, 0xd4, 0xa7, 0xb1, 0x2c, 0x5d, 0xb4, 0x43, 0xe1, 0x0f, 0x06, 0xbd, 0xaa, 0x20,
	0xdc, 0x07, 0x3f, 0x15, 0x53, 0x9e, 0x6a, 0xc2, 0xf8, 0xbc, 0xb8, 0x21, 0xf0, 0x11, 0x80, 0xa4,
	0x4c, 0x28, 0x32, 0x72, 0xc7, 0xc8, 0x2d, 0x06, 0x87, 0xb0, 0x55, 0x88, 0xe4, 0x8b, 0x3e, 0xc1,
	0xae, 0xc9, 0x51, 0x41, 0x3c, 0x84, 0x9d, 0xa9, 0xc8, 0x15, 0x5f, 0xe4, 0x24, 0x8d, 0xbe, 0x61,
	0xf4, 0x9b, 0x64, 0xf8, 0x97, 0x81, 0x37, 0xbe, 0xa6, 0x5c, 0x61, 0x00, 0xbd, 0xaa, 0x0d, 0x6e,
	0xbb, 0x35, 0x6e, 0x15, 0xd2, 0x69, 0x17, 0xa2, 0x7b, 0x43, 0x52, 0xba, 0xcc, 0xfa, 0x17, 0x23,
	0xf0, 0x49, 0x2f, 0x77, 0xb1, 0x2a, 0x6c, 0xc6, 0xc1, 0x68, 0xcf, 0xf5, 0x7f, 0x5c, 0xf1, 0x71,
	0x63, 0xc1, 0x67, 0xd0, 0x2b, 0x5c, 0x27, 0x86, 0x9e, 0xb9, 0x2a, 0x6b, 0x27, 0x5e, 0x1b, 0xc2,
	0x5f, 0x0c, 0x7a, 0xe7, 0x62, 0x6e, 0xcf, 0xe5, 0x0c, 0xfc, 0x7a, 0x8c, 0xdc, 0xcd, 0x0c, 0x22,
	0x3b, 0x47, 0x51, 0x35, 0x47, 0xd1, 0x45, 0xe5, 0x88, 0x1b, 0x33, 0x1e, 0xc2, 0x86, 0xd2, 0xdb,
	0xeb, 0xdc, 0xb1, 0x3d, 0xa3, 0xea, 0x53, 0x26, 0x9d, 0xc8, 0x55, 0x67, 0x81, 0x61, 0xa5, 0x14,
	0xd2, 0x75, 0xd3, 0x82, 0xa7, 0x9f, 0xc1, 0xaf, 0xc3, 0x71, 0xe0, 0x66, 0xc6, 0x30, 0x7b, 0xff,
	0xe1, 0x6e, 0x35, 0x10, 0x96, 0x60, 0xb8, 0x03, 0xbe, 0x2e, 0xc9, 0xc2, 0x8e, 0x86, 0x19, 0x29,
	0x6e, 0x61, 0x77, 0xf4, 0x9b, 0xc1, 0xee, 0xc4, 0x3d, 0x23, 0x13, 0x92, 0xd7, 0x8b, 0x29, 0xe1,
	0x09, 0xf4, 0x3e, 0x90, 0x72, 0x97, 0x6a, 0xad, 0xc8, 0xb1, 0x7e, 0x2c, 0x82, 0x1b, 0xcf, 0x80,
	0x8e, 0x30, 0x0b, 0x9e, 0x8b, 0x39, 0x56, 0x1d, 0xad, 0x5a, 0x17, 0xdc, 0x26, 0x8e, 0xd8, 0x09,
	0xc3, 0x08, 0x36, 0x3f, 0xf2, 0x3c, 0x49, 0x09, 0xb7, 0xdb, 0x1d, 0x09, 0xee, 0xc8, 0x77, 0xb9,
	0x69, 0xf0, 0xe9, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x96, 0x0d, 0x1b, 0xa2, 0xf4, 0x04, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SkaffoldServiceClient is the client API for SkaffoldService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SkaffoldServiceClient interface {
	GetState(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*State, error)
	EventLog(ctx context.Context, opts ...grpc.CallOption) (SkaffoldService_EventLogClient, error)
	Handle(ctx context.Context, in *Event, opts ...grpc.CallOption) (*empty.Empty, error)
}

type skaffoldServiceClient struct {
	cc *grpc.ClientConn
}

func NewSkaffoldServiceClient(cc *grpc.ClientConn) SkaffoldServiceClient {
	return &skaffoldServiceClient{cc}
}

func (c *skaffoldServiceClient) GetState(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*State, error) {
	out := new(State)
	err := c.cc.Invoke(ctx, "/proto.SkaffoldService/GetState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *skaffoldServiceClient) EventLog(ctx context.Context, opts ...grpc.CallOption) (SkaffoldService_EventLogClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SkaffoldService_serviceDesc.Streams[0], "/proto.SkaffoldService/EventLog", opts...)
	if err != nil {
		return nil, err
	}
	x := &skaffoldServiceEventLogClient{stream}
	return x, nil
}

type SkaffoldService_EventLogClient interface {
	Send(*LogEntry) error
	Recv() (*LogEntry, error)
	grpc.ClientStream
}

type skaffoldServiceEventLogClient struct {
	grpc.ClientStream
}

func (x *skaffoldServiceEventLogClient) Send(m *LogEntry) error {
	return x.ClientStream.SendMsg(m)
}

func (x *skaffoldServiceEventLogClient) Recv() (*LogEntry, error) {
	m := new(LogEntry)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *skaffoldServiceClient) Handle(ctx context.Context, in *Event, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/proto.SkaffoldService/Handle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SkaffoldServiceServer is the server API for SkaffoldService service.
type SkaffoldServiceServer interface {
	GetState(context.Context, *empty.Empty) (*State, error)
	EventLog(SkaffoldService_EventLogServer) error
	Handle(context.Context, *Event) (*empty.Empty, error)
}

func RegisterSkaffoldServiceServer(s *grpc.Server, srv SkaffoldServiceServer) {
	s.RegisterService(&_SkaffoldService_serviceDesc, srv)
}

func _SkaffoldService_GetState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SkaffoldServiceServer).GetState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.SkaffoldService/GetState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SkaffoldServiceServer).GetState(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _SkaffoldService_EventLog_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SkaffoldServiceServer).EventLog(&skaffoldServiceEventLogServer{stream})
}

type SkaffoldService_EventLogServer interface {
	Send(*LogEntry) error
	Recv() (*LogEntry, error)
	grpc.ServerStream
}

type skaffoldServiceEventLogServer struct {
	grpc.ServerStream
}

func (x *skaffoldServiceEventLogServer) Send(m *LogEntry) error {
	return x.ServerStream.SendMsg(m)
}

func (x *skaffoldServiceEventLogServer) Recv() (*LogEntry, error) {
	m := new(LogEntry)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _SkaffoldService_Handle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Event)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SkaffoldServiceServer).Handle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.SkaffoldService/Handle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SkaffoldServiceServer).Handle(ctx, req.(*Event))
	}
	return interceptor(ctx, in, info, handler)
}

var _SkaffoldService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.SkaffoldService",
	HandlerType: (*SkaffoldServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetState",
			Handler:    _SkaffoldService_GetState_Handler,
		},
		{
			MethodName: "Handle",
			Handler:    _SkaffoldService_Handle_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "EventLog",
			Handler:       _SkaffoldService_EventLog_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "skaffold.proto",
}
